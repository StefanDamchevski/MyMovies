@model DemoMovies.ViewModels.MovieDetailsModel;

@addTagHelper * , Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "_Layout";
    ViewBag.PageName = "Movie Details";
}

@section Styles {
    <link href="~/css/movieDetails.css" rel="stylesheet" />
    <link href="~/css/sidebar.css" rel="stylesheet" />
}

<div class="row">
    <div class="col-md-9">
        <div class="movie-about">
            <div class="movie-img-poz">
                <img class="movie-img" src="@Model.ImageUrl" />
            </div>
            <div class="movie-details">
                <div class="movie-title">@Model.Title</div>
                <p class="year-released">(@Model.YearReleased)</p>
                <div class="movie-desc">
                    <p style="text-align:center">Description:</p>
                    <p>@Model.Description</p>
                    <div class="more-movie-info">
                        <p class="movie-genre">Genre: @Model.Genre</p>
                        <p class="movie-cast">
                            Cast:
                            <span>@Model.Cast</span>
                        </p>
                        <p class="movie-date-created">Date Created: @Model.DateCreated.ToString("yyyy/MM/dd")</p>
                        <p class="movie-views">@Model.Views Views</p>
                    </div>
                </div>

            </div>
        </div>

        <div class="add-likes" style="margin-top:2%; margin-bottom:2%;">
            <span class="movie-likes-count" style="color:white"><span id="movieLikesCount">@Model.MovieLikes.Where(x => x.Status == true).Count()</span> Likes</span>
            <span class="movie-likes-count" style="color:white; margin-left: 1%"><span id="movieDislikesCount">@Model.MovieLikes.Where(x => x.Status == false).Count()</span> Dislikes</span>
            <div class="buttons">
                @if (User.Identity.IsAuthenticated)
                 {
                    if (Model.MovieStatus == DemoMovies.ViewModels.MovieLikeStatus.None)
                    {
                        <button id="btnAddLike" class="btn btn-outline-success" onclick="AddLike(@Model.Id)">Like</button>
                        <button id="btnRemoveLike" class="btn btn-success displayNone" onclick="RemoveLike(@Model.Id)">Un Like</button>
                        <button id="btnAddDislike" class="btn btn-outline-danger" onclick="AddDislike(@Model.Id)">Dislike</button>
                        <button id="btnRemoveDislike" class="btn btn-danger displayNone" onclick="RemoveDislike(@Model.Id)">Un Dislike</button>
                    }

                    if (Model.MovieStatus == DemoMovies.ViewModels.MovieLikeStatus.Liked)
                    {
                        <button id="btnAddLike" class="btn btn-outline-success displayNone" onclick="AddLike(@Model.Id)">Like</button>
                        <button id="btnRemoveLike" class="btn btn-success" onclick="RemoveLike(@Model.Id)">Un Like</button>
                        <button id="btnAddDislike" class="btn btn-outline-danger" onclick="AddDislike(@Model.Id)">Dislike</button>
                        <button id="btnRemoveDislike" class="btn btn-danger displayNone" onclick="RemoveDislike(@Model.Id)">Un Dislike</button>
                    }

                    if (Model.MovieStatus == DemoMovies.ViewModels.MovieLikeStatus.Disliked)
                    {
                        <button id="btnAddLike" class="btn btn-outline-success " onclick="AddLike(@Model.Id)">Like</button>
                        <button id="btnRemoveLike" class="btn btn-success displayNone" onclick="RemoveLike(@Model.Id)">Un Like</button>
                        <button id="btnAddDislike" class="btn btn-outline-danger displayNone" onclick="AddDislike(@Model.Id)">Dislike</button>
                        <button id="btnRemoveDislike" class="btn btn-danger" onclick="RemoveDislike(@Model.Id)">Un Dislike</button>
                    }
                 }
            </div>
        </div>


        <div class="add-comments">
            <h1 style="color:white">Comments</h1>
            @if (User.Identity.IsAuthenticated)
            {
                <form asp-controller="MovieComment" asp-action="Add" method="post" onsubmit="return ValidateCommentField()">
                    <input id="movieId" name="movieId" value="@Model.Id" hidden />
                    <div class="form-group">
                        <textarea id="comment" name="comment" class="form-control"> </textarea>
                    </div>
                    <div class="comment-btn">
                        <button type="submit" class="btn btn-primary">Comment</button>
                    </div>
                </form>
            }

            <div class="comment-box">
                @foreach (var comment in @Model.MovieComments)
                {
                    if (comment.IsApproved)
                    {
                        <div class="comment-box">
                            <div class="comment-body">
                                <span class="tip tip-down"></span>
                                <div class="message">
                                    <p>@comment.Comment</p>
                                </div>
                            </div>
                            <div class="user-comment">
                                <p>@comment.Username - @comment.DaysAgo days ago</p>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
    <div class="col-md-3">
        <partial name="SidebarPartial" for="SideBarData" />
    </div>
</div>
@section Scripts {
    <script src="~/lib/axios/axios.min.js"></script>
    <script src="~/js/details.js"></script>
}